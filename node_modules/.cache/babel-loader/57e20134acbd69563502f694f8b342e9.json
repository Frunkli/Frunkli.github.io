{"remainingRequest":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/thread-loader/dist/cjs.js!/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/babel-loader/lib/index.js!/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liyanliang/Desktop/便家/tob-bianjia-clint/src/components/power/Roles.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/src/components/power/Roles.vue","mtime":1679735545018},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Roles.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑 -->\n    <el-breadcrumb separator=\"/\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>\n        <a href=\"/home\">权限管理</a>\n      </el-breadcrumb-item>\n      <el-breadcrumb-item>角色列表</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片布局 -->\n    <el-card>\n      <!-- 添加角色按钮 -->\n      <el-row>\n        <el-col>\n          <el-button type=\"primary\">添加角色</el-button>\n        </el-col>\n      </el-row>\n      <!-- 角色列表 -->\n      <el-table :data=\"rolesList\" style=\"width: 100%\" stripe border>\n        <!-- 展开列 -->\n\n        <el-table-column type=\"expand\">\n          <template v-slot=\"scope\">\n            <el-row\n              :class=\"['bdbottom' , i1===0 ? 'bdtop' : '' ,'vcenter'] \"\n              v-for=\"(item1,i1) in scope.row.children\"\n              :key=\"item1.id\"\n            >\n              <!-- 一级权限 -->\n              <el-col :span=\"5\">\n                <el-tag closable @close=\"removeRightById(scope.row, item1.id)\">{{item1.authName}}</el-tag>\n                <i class=\"el-icon-caret-right\"></i>\n              </el-col>\n              <!-- 二三级权限 -->\n              <el-col :span=\"19\">\n                <el-row\n                  v-for=\"(item2,i2) in item1.children\"\n                  :key=\"item2.id\"\n                  :class=\"['bdbottom' , i1===0 ? 'bdtop' : ''  ,'vcenter']\"\n                >\n                  <!-- 左二级 -->\n                  <el-col :span=\"6\">\n                    <el-tag\n                      closable\n                      @close=\"removeRightById(scope.row, item2.id)\"\n                      type=\"success\"\n                    >{{item2.authName}}</el-tag>\n                    <i class=\"el-icon-caret-right\"></i>\n                  </el-col>\n                  <!-- 右三级 -->\n                  <el-col :span=\"18\">\n                    <el-tag\n                      v-for=\"(item3,i3) in item2.children\"\n                      :key=\"item3.id\"\n                      type=\"warning\"\n                      closable\n                      @close=\"removeRightById(scope.row, item3.id)\"\n                    >{{item3.authName}}</el-tag>\n                  </el-col>\n                </el-row>\n              </el-col>\n            </el-row>\n          </template>\n        </el-table-column>\n        <!-- 索引列 -->\n        <el-table-column type=\"index\" label=\"#\"></el-table-column>\n        <el-table-column prop=\"roleName\" label=\"角色名词\"></el-table-column>\n        <el-table-column prop=\"roleDesc\" label=\"角色描述\"></el-table-column>\n        <el-table-column label=\"操作\" width=\"300px\">\n          <template v-slot=\"scope\">\n            <!-- 修改 -->\n            <el-button\n              @click=\"showEditDialog(scope.row.id)\"\n              type=\"primary\"\n              icon=\"el-icon-edit\"\n              size=\"mini\"\n            >修改</el-button>\n            <!-- 删除 -->\n            <el-button\n              @click=\"removeRolesById(scope.row.id)\"\n              type=\"danger\"\n              icon=\"el-icon-delete\"\n              size=\"mini\"\n            >删除</el-button>\n            <!-- 分配角色 -->\n            <el-tooltip :enterable=\"false\" effect=\"dark\" content=\"分配权限\" placement=\"top\">\n              <el-button\n                @click=\"showSetRightDialog(scope.row)\"\n                type=\"warning\"\n                icon=\"el-icon-setting\"\n                size=\"mini\"\n              >分配角色</el-button>\n            </el-tooltip>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n\n    <!-- 修改用户对话框 -->\n    <el-dialog title=\"修改用户\" :visible.sync=\"editDialogVisible\" @close=\"editDialogClosed\" width=\"50%\">\n      <!-- 内容 -->\n      <el-form ref=\"editFormRef\" :rules=\"editFormRules\" :model=\"editForm\" label-width=\"80px\">\n        <el-form-item label=\"角色名词\" prop=\"roleName\">\n          <el-input v-model=\"editForm.roleName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"角色描述\" prop=\"roleDesc\">\n          <el-input v-model=\"editForm.roleDesc\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editRoles\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 分配权限对话框 -->\n    <el-dialog\n      title=\"分配权限\"\n      :visible.sync=\"setRightDialogVisible\"\n      @close=\"setRightDialogClosed\"\n      width=\"50%\"\n    >\n      <!-- 内容 -->\n\n      <el-tree\n        show-checkbox\n        ref=\"treeRef\"\n        node-key=\"id\"\n        default-expand-all\n        :default-checked-keys=\"defKeys\"\n        :data=\"rightList\"\n        :props=\"treeProps\"\n      ></el-tree>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"setRightDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"allotRights\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      rolesList: [],\n      // 编辑角色对象\n      editForm: {},\n      editDialogVisible: false,\n      editFormRules: {\n        roleName: [\n          { required: true, message: \"请输入用户名称\", trigger: \"blur\" }\n        ],\n        roleDesc: [\n          { required: true, message: \"请输入用户名称\", trigger: \"blur\" }\n        ]\n      },\n      setRightDialogVisible: false,\n      // 所有权限数据\n      rightList: [],\n      // 树形控件对象\n      treeProps: {\n        label: \"authName\",\n        children: \"children\"\n      },\n      // 默认选择Id节点的值\n      defKeys: [],\n      // 当前即将分配权限id\n      roleId: \"\"\n    };\n  },\n  created() {\n    this.getRolesList();\n  },\n  methods: {\n    async getRolesList() {\n      const { data: res } = await this.$http.get(\"roles\");\n      // console.log(res);\n      if (res.meta.status !== 200) {\n        this.$message.error(\"获取角色列表失败\");\n      }\n      this.rolesList = res.data;\n      // console.log(this.rolesList);\n    },\n    // 修改用户对话框\n    async showEditDialog(id) {\n      const { data: res } = await this.$http.get(\"roles/\" + id);\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"查询失败\");\n      }\n      this.editForm = res.data;\n      // console.log(this.editForm);\n      this.editDialogVisible = !this.editDialogVisible;\n    },\n    // 关闭事件\n    editDialogClosed() {\n      // console.log(this.$refs);\n      this.$refs.editFormRef.resetFields();\n    },\n    // 编辑表单预验证\n    editRoles() {\n      this.$refs.editFormRef.validate(async valid => {\n        // console.log(valid);\n        if (!valid) return;\n        console.log(this.editForm);\n\n        // this.editForm.roleId = this.rolesList.id;\n        const { data: res } = await this.$http.put(\n          \"roles/\" + this.editForm.roleId,\n          {\n            roleName: this.editForm.roleName,\n            roleDesc: this.editForm.roleDesc,\n            id: this.editForm.roleId\n          }\n        );\n\n        if (res.meta.status !== 200) {\n          return console.log(res.meta.status);\n          return this.$message.error(\"提交失败\");\n        }\n\n        this.editDialogVisible = false;\n        this.getRolesList();\n        this.$message.success(\"提交成功！\");\n      });\n    },\n    // 删除角色\n    async removeRolesById(id) {\n      const confirmResult = await this.$confirm(\n        \"此操作将永久删除该用户, 是否继续?\",\n        \"提示\",\n        {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }\n      ).catch(err => {\n        return err;\n      });\n      if (confirmResult !== \"confirm\") {\n        return this.$message.info(\"取消\");\n      }\n      const { data: res } = await this.$http.delete(\"roles/\" + id);\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"删除失败\");\n      }\n      this.$message.success(\"删除成功！\");\n      this.getRolesList();\n    },\n    // 删除权限\n    async removeRightById(roles, rightId) {\n      console.log(roles);\n      const confirmResult = await this.$confirm(\n        \"此操作将永久删除该用户, 是否继续?\",\n        \"提示\",\n        {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }\n      ).catch(err => {\n        return err;\n      });\n      if (confirmResult != \"confirm\") {\n        return this.$message.info(\"取消了\");\n      }\n      const { data: res } = await this.$http.delete(\n        `roles/${roles.id}/rights/${rightId}`\n      );\n      if (res.meta.status !== 200) {\n        return console.log(res.meta.status);\n        return this.$message.error(\"删除失败！\");\n      }\n      this.$message.success(\"删除成功\");\n      // 权限返回\n      roles.children = res.data;\n    },\n    // 展示权限分配对话框\n    async showSetRightDialog(roles) {\n      this.roleId = roles.id;\n      const { data: res } = await this.$http.get(\"rights/tree\");\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"获取失败\");\n      }\n      this.rightList = res.data;\n      // console.log(this.rightList);\n      //获取三级节点\n      this.getLeafKeys(roles, this.defKeys);\n\n      this.setRightDialogVisible = true;\n    },\n    getLeafKeys(node, arr) {\n      // 判断是否三级节点\n      if (!node.children) {\n        return arr.push(node.id);\n      }\n      node.children.forEach(item => {\n        this.getLeafKeys(item, arr);\n      });\n    },\n    //分配权限对话框关闭\n    setRightDialogClosed() {\n      this.defKeys = [];\n    },\n    //点击分配权限\n    async allotRights() {\n      const keys = [\n        ...this.$refs.treeRef.getCheckedKeys(),\n        ...this.$refs.treeRef.getHalfCheckedKeys()\n      ];\n      console.log(this.roleId, keys);\n      const idStr = keys.join(\",\");\n      const { data: res } = await this.$http.post(\n        `roles/${this.roleId}/rights`,\n        {\n          rids: idStr\n        }\n      );\n      if (res.meta.status !== 200) {\n        // return console.log(res.meta.status);\n        return this.$message.error(\"分配权限失败\");\n      }\n      this.$message.success(\"分配成功\");\n      // this.$refs.treeRef\n      this.getRolesList();\n      this.setRightDialogVisible = false;\n    }\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n.el-tag {\n  margin: 7px;\n  padding: 0 7px;\n}\n.bdtop {\n  border-top: 1px solid #eee;\n}\n.bdbottom {\n  border-bottom: 1px solid #eee;\n}\n.vcenter {\n  display: flex;\n  align-items: center;\n}\n</style>"],"sourceRoot":"src/components/power"}]}