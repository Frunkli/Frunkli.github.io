{"remainingRequest":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/thread-loader/dist/cjs.js!/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/babel-loader/lib/index.js!/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liyanliang/Desktop/便家/tob-bianjia-clint/src/components/report/Report.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/src/components/report/Report.vue","mtime":1679735545018},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2xpeWFubGlhbmcvRGVza3RvcC9cdTRGQkZcdTVCQjYvdG9iLWJpYW5qaWEtY2xpbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgZWNoYXJ0cyBmcm9tICJlY2hhcnRzIjsKaW1wb3J0IF8gZnJvbSAibG9kYXNoIjsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBvcHRpb246IHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogIueUqOaIt+adpea6kCIKICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICJheGlzIiwKICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgIHR5cGU6ICJjcm9zcyIsCiAgICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAiI0U5RUVGMyIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZ3JpZDogewogICAgICAgICAgbGVmdDogIjMlIiwKICAgICAgICAgIHJpZ2h0OiAiNCUiLAogICAgICAgICAgYm90dG9tOiAiMyUiLAogICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB4QXhpczogW3sKICAgICAgICAgIGJvdW5kYXJ5R2FwOiBmYWxzZQogICAgICAgIH1dLAogICAgICAgIHlBeGlzOiBbewogICAgICAgICAgdHlwZTogInZhbHVlIgogICAgICAgIH1dCiAgICAgIH0KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgbXlDaGFydCwgX3lpZWxkJF90aGlzJCRodHRwJGdlLCBkYXRhLCByZXN1bHQ7CgogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgLy8g5Z+65LqO5YeG5aSH5aW955qEZG9t77yM5Yid5aeL5YyWZWNoYXJ0c+WunuS+iwogICAgICAgICAgICAgIG15Q2hhcnQgPSBlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm1haW4iKSk7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRodHRwLmdldCgicmVwb3J0cy90eXBlLzEiKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBfeWllbGQkX3RoaXMkJGh0dHAkZ2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkX3RoaXMkJGh0dHAkZ2UuZGF0YTsKCiAgICAgICAgICAgICAgaWYgKCEoZGF0YS5tZXRhLnN0YXR1cyAhPT0gMjAwKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIF90aGlzLiRtZXNzYWdlLmVycm9yKGRhdGEubWV0YS5tc2cpKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAvLyDmjIflrprlm77ooajnmoTphY3nva7pobnlkozmlbDmja4KICAgICAgICAgICAgICAvLyDkvb/nlKjliJrmjIflrprnmoTphY3nva7pobnlkozmlbDmja7mmL7npLrlm77ooajjgIIKICAgICAgICAgICAgICByZXN1bHQgPSBfLm1lcmdlKGRhdGEuZGF0YSwgX3RoaXMub3B0aW9uKTsKICAgICAgICAgICAgICBteUNoYXJ0LnNldE9wdGlvbihyZXN1bHQpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["Report.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAmBA,OAAA,OAAA,MAAA,SAAA;AACA,OAAA,CAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA;AADA,SADA;AAIA,QAAA,OAAA,EAAA;AACA,UAAA,OAAA,EAAA,MADA;AAEA,UAAA,WAAA,EAAA;AACA,YAAA,IAAA,EAAA,OADA;AAEA,YAAA,KAAA,EAAA;AACA,cAAA,eAAA,EAAA;AADA;AAFA;AAFA,SAJA;AAaA,QAAA,IAAA,EAAA;AACA,UAAA,IAAA,EAAA,IADA;AAEA,UAAA,KAAA,EAAA,IAFA;AAGA,UAAA,MAAA,EAAA,IAHA;AAIA,UAAA,YAAA,EAAA;AAJA,SAbA;AAmBA,QAAA,KAAA,EAAA,CACA;AACA,UAAA,WAAA,EAAA;AADA,SADA,CAnBA;AAwBA,QAAA,KAAA,EAAA,CACA;AACA,UAAA,IAAA,EAAA;AADA,SADA;AAxBA;AADA,KAAA;AAgCA,GAlCA;AAmCA,EAAA,OAnCA,qBAmCA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA;AACA,cAAA,OAFA,GAEA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA,cAAA,CAAA,MAAA,CAAA,CAFA;AAAA;AAAA,qBAIA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,gBAAA,CAJA;;AAAA;AAAA;AAIA,cAAA,IAJA,yBAIA,IAJA;;AAAA,oBAKA,IAAA,CAAA,IAAA,CAAA,MAAA,KAAA,GALA;AAAA;AAAA;AAAA;;AAAA,+CAMA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CANA;;AAAA;AAQA;AACA;AACA,cAAA,MAVA,GAUA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA,MAAA,CAVA;AAWA,cAAA,OAAA,CAAA,SAAA,CAAA,MAAA;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AA/CA,CAAA","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑 -->\n    <el-breadcrumb separator=\"/\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>\n        <a href=\"/home\">数据统计</a>\n      </el-breadcrumb-item>\n      <el-breadcrumb-item>数据报表</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片布局 -->\n    <el-card>\n      <!-- 为ECharts准备一个具备大小（宽高）的Dom -->\n      <div id=\"main\" style=\"width: 600px;height:400px;\"></div>\n    </el-card>\n  </div>\n</template>\n<script>\nimport echarts from \"echarts\";\nimport _ from \"lodash\";\n\nexport default {\n  data() {\n    return {\n      option: {\n        title: {\n          text: \"用户来源\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            label: {\n              backgroundColor: \"#E9EEF3\"\n            }\n          }\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          containLabel: true\n        },\n        xAxis: [\n          {\n            boundaryGap: false\n          }\n        ],\n        yAxis: [\n          {\n            type: \"value\"\n          }\n        ]\n      }\n    };\n  },\n  async mounted() {\n    // 基于准备好的dom，初始化echarts实例\n    const myChart = echarts.init(document.getElementById(\"main\"));\n\n    const { data } = await this.$http.get(\"reports/type/1\");\n    if (data.meta.status !== 200) {\n      return this.$message.error(data.meta.msg);\n    }\n    // 指定图表的配置项和数据\n    // 使用刚指定的配置项和数据显示图表。\n    const result = _.merge(data.data, this.option);\n    myChart.setOption(result);\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n</style>"],"sourceRoot":"src/components/report"}]}