{"remainingRequest":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/babel-loader/lib/index.js!/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liyanliang/Desktop/便家/tob-bianjia-clint/src/components/goods/Add.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/src/components/goods/Add.vue","mtime":1679735545016},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Add.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑 -->\n    <el-breadcrumb separator=\"/\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>\n        <a href=\"/home\">商品管理</a>\n      </el-breadcrumb-item>\n      <el-breadcrumb-item>添加商品</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片布局 -->\n    <el-card>\n      <el-alert title=\"添加商品信息\" type=\"info\" :closable=\"false\" center show-icon></el-alert>\n      <!-- 步骤条 -->\n\n      <el-steps align-center :space=\"200\" :active=\"activeIndex-0\" finish-status=\"success\">\n        <el-step title=\"基本信息\"></el-step>\n        <el-step title=\"商品参数\"></el-step>\n        <el-step title=\"商品信息\"></el-step>\n        <el-step title=\"商品图片\"></el-step>\n        <el-step title=\"商品内容\"></el-step>\n        <el-step title=\"完成\"></el-step>\n      </el-steps>\n\n      <!-- tab栏 -->\n      <el-form\n        :model=\"addForm\"\n        :rules=\"addFormRules\"\n        ref=\"addFormRef\"\n        label-width=\"100px\"\n        label-position=\"top\"\n      >\n        <el-tabs\n          @tab-click=\"tabClicked\"\n          :before-leave=\"beforTabLeave\"\n          v-model=\"activeIndex\"\n          :tab-position=\"'left'\"\n        >\n          <el-tab-pane name=\"0\" label=\"基本信息\">\n            <el-form-item label=\"商品名称\" prop=\"goods_name\">\n              <el-input v-model=\"addForm.goods_name\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"商品价格\" prop=\"goods_price\">\n              <el-input v-model=\"addForm.goods_price\" type=\"number\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"商品重量\" prop=\"goods_weight\">\n              <el-input v-model=\"addForm.goods_weight\" type=\"number\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"商品数量\" prop=\"goods_number\">\n              <el-input v-model=\"addForm.goods_number\" type=\"number\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"商品分类：\" prop=\"goods_cat\">\n              <el-cascader\n                :options=\"catelist\"\n                :props=\"cateProps\"\n                clearable\n                v-model=\"addForm.goods_cat\"\n                @change=\"CateChanged\"\n              ></el-cascader>\n            </el-form-item>\n          </el-tab-pane>\n          <el-tab-pane name=\"1\" label=\"商品参数\">\n            <el-form-item :label=\"item.attr_name\" v-for=\"item in manyTableData\" :key=\"item.arrt_id\">\n              <!-- 复选框 -->\n              <el-checkbox-group v-model=\"item.attr_vals\">\n                <el-checkbox :label=\"cb\" v-for=\"(cb,i) in item.attr_vals\" :key=\"i\" border></el-checkbox>\n              </el-checkbox-group>\n            </el-form-item>\n          </el-tab-pane>\n          <el-tab-pane name=\"2\" label=\"商品信息\">\n            <el-form-item :label=\"item.attr_name\" v-for=\"item in onlyTableData\" :key=\"item.arrt_id\">\n              <!-- 复选框 -->\n              <el-checkbox-group v-model=\"item.attr_vals\">\n                <el-checkbox :label=\"cb\" v-for=\"(cb,i) in item.attr_vals\" :key=\"i\" border></el-checkbox>\n              </el-checkbox-group>\n              <el-input v-model=\"item.attr_vals\"></el-input>\n            </el-form-item>\n          </el-tab-pane>\n          <el-tab-pane name=\"3\" label=\"商品图片\">\n            <!-- 图片上传 -->\n            <!-- action上传地址 -->\n            <el-upload\n              :action=\"upURL\"\n              :on-preview=\"handlePreview\"\n              :on-remove=\"handleRemove\"\n              list-type=\"picture\"\n              :headers=\"headerObj\"\n              :on-success=\"handleSuccess\"\n            >\n              <el-button size=\"small\" type=\"primary\">点击上传</el-button>\n              <div slot=\"tip\" class=\"el-upload__tip\">只能上传jpg/png文件，且不超过500kb</div>\n            </el-upload>\n          </el-tab-pane>\n          <el-tab-pane name=\"4\" label=\"商品内容\">\n            <quill-editor v-model=\"addForm.goods_introduce\"></quill-editor>\n            <el-button @click=\"add\" type=\"primary\" class=\"btnadd\">添加商品</el-button>\n          </el-tab-pane>\n        </el-tabs>\n      </el-form>\n    </el-card>\n\n    <!-- 图片预览 -->\n    <el-dialog title=\"图片预览\" :visible.sync=\"previewVisible\" width=\"50%\">\n      <img class=\"previewImg\" :src=\"previewPath\" alt=\"图片\" />\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport _ from \"lodash\";\nexport default {\n  data() {\n    return {\n      activeIndex: \"0\",\n      addForm: {\n        goods_name: \"\",\n        goods_price: 0,\n        goods_weight: 0,\n        goods_number: 0,\n        // 商品分类数组\n        goods_cat: [],\n        pics: [],\n        goods_introduce: \"\",\n        attrs: []\n      },\n      addFormRules: {\n        goods_name: [\n          { required: true, message: \"请输入商品名称\", trigger: \"blur\" }\n        ],\n        goods_price: [\n          { required: true, message: \"请输入商品价格\", trigger: \"blur\" }\n        ],\n        goods_wight: [\n          { required: true, message: \"请输入商品重量\", trigger: \"blur\" }\n        ],\n        goods_number: [\n          { required: true, message: \"请输入商品数量\", trigger: \"blur\" }\n        ],\n        goods_cat: [\n          { required: true, message: \"请选择商品分类\", trigger: \"blur\" }\n        ]\n      },\n      catelist: [],\n      cateProps: {\n        expandTrigger: \"hover\",\n        value: \"cat_id\",\n        label: \"cat_name\",\n        children: \"children\"\n      },\n      // 动态参数数据\n      manyTableData: [],\n      onlyTableData: [],\n      upURL: \"https://www.liulongbin.top:8888/api/private/v1/upload\",\n      // 图片上传请求头\n      headerObj: {\n        Authorization: window.sessionStorage.getItem(\"token\")\n      },\n      pics: [],\n      previewPath: \"\",\n      previewVisible: false\n    };\n  },\n  created() {\n    this.getCateList();\n  },\n  methods: {\n    async getCateList() {\n      const { data: res } = await this.$http.get(\"categories\");\n      if (res.meta.status !== 200) {\n        return this.$message.error(res.meta.msg);\n      }\n      this.catelist = res.data;\n    },\n    CateChanged() {\n      if (this.addForm.goods_cat.length !== 3) {\n        this.addForm.goods_cat = [];\n        this.$message.error(\"请选择三级分类\");\n      }\n    },\n    beforTabLeave(activeName, oldActiveName) {\n      // console.log(activeName, oldActiveName);\n      if (oldActiveName === \"0\" && this.addForm.goods_cat.length !== 3) {\n        this.$message.error(\"请选择三级商品分类\");\n        return false;\n      }\n    },\n    async tabClicked() {\n      if (this.activeIndex === \"1\") {\n        const { data: res } = await this.$http.get(\n          `categories/${this.cateId}/attributes`,\n          {\n            params: { sel: \"many\" }\n          }\n        );\n        if (res.meta.status !== 200) {\n          return this.$message.error(\"获取失败！\");\n        }\n        // console.log(res.data);\n        res.data.forEach(item => {\n          item.attr_vals =\n            item.attr_vals.length === 0 ? [] : item.attr_vals.split(\" \");\n        });\n        this.manyTableData = res.data;\n      } else if (this.activeIndex === \"2\") {\n        const { data: res } = await this.$http.get(\n          `categories/${this.cateId}/attributes`,\n          {\n            params: { sel: \"only\" }\n          }\n        );\n        if (res.meta.status !== 200) {\n          return this.$message.error(\"获取失败！\");\n        }\n        // console.log(res.data);\n        res.data.forEach(item => {\n          item.attr_vals =\n            item.attr_vals.length === 0 ? [] : item.attr_vals.split(\" \");\n        });\n        this.onlyTableData = res.data;\n      }\n    },\n    // 处理图片预览\n    handlePreview(file) {\n      this.previewPath = file.response.data.url;\n      this.previewVisible = true;\n    },\n    //移除\n    handleRemove(file) {\n      const picPath = file.response.data.tmp_path;\n      const i = this.addForm.pics.findIndex(x => x.pic === picPath);\n      this.addForm.pics.splice(i, 1);\n    },\n\n    handleSuccess(res) {\n      const picInfo = { pic: res.data.tmp_path };\n      this.addForm.pics.push(picInfo);\n      // console.log(this.addForm);\n    },\n    add() {\n      // console.log(this.addForm);\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) {\n          return this.$message.error(\"请填写必要的信息\");\n        }\n        const form = _.cloneDeep(this.addForm);\n        form.goods_cat = form.goods_cat.join(\",\");\n        this.manyTableData.forEach(item => {\n          const newInfo = {\n            attr_id: item.attr_id,\n            attr_value: item.attr_vals.join(\" \")\n          };\n          this.addForm.attrs.push(newInfo);\n        });\n        this.onlyTableData.forEach(item => {\n          const newInfo = {\n            attr_id: item.attr_id,\n            attr_value: item.attr_vals\n          };\n          this.addForm.attrs.push(newInfo);\n        });\n        form.attrs = this.addForm.attrs;\n        // console.log(form);\n        const { data: res } = await this.$http.post(\"goods\", form);\n        if (res.meta.status !== 201) {\n          return this.$message.error(\"添加失败\");\n        }\n        this.$message.success(\"添加商品成功！\");\n        this.$router.push(\"/goods\");\n      });\n    }\n  },\n  computed: {\n    cateId() {\n      if (this.addForm.goods_cat.length === 3) {\n        return this.addForm.goods_cat[2];\n      }\n      return null;\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.el-checkbox {\n  margin: 0 10px 0 0 !important;\n}\n.previewImg {\n  width: 100%;\n}\n</style>"],"sourceRoot":"src/components/goods"}]}