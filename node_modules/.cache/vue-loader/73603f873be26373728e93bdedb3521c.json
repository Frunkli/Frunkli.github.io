{"remainingRequest":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liyanliang/Desktop/便家/tob-bianjia-clint/src/components/users/Users.vue?vue&type=style&index=0&id=f5554e7e&lang=less&scoped=true&","dependencies":[{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/src/components/users/Users.vue","mtime":1679735545018},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5lbC10YWJsZSB7CiAgbWFyZ2luLXRvcDogMjBweDsKICBmb250LXNpemU6IDEycHg7Cn0KLmVsLXBhZ2luYXRpb24gewogIG1hcmdpbi10b3A6IDE1cHg7Cn0K"},{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwaA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Users.vue","sourceRoot":"src/components/users","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑 -->\n    <el-breadcrumb separator=\"/\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>\n        <a href=\"/home\">用户管理</a>\n      </el-breadcrumb-item>\n      <el-breadcrumb-item>用户列表</el-breadcrumb-item>\n    </el-breadcrumb>\n    <!-- 卡片布局 -->\n    <el-card>\n      <!-- 搜索输入 -->\n\n      <el-row :gutter=\"20\">\n        <el-col :span=\"10\">\n          <el-input clearable @clear=\"getUserList\" placeholder=\"请输入内容\" v-model=\"queryInfo.query\">\n            <el-button @click=\"getUserList\" slot=\"append\" icon=\"el-icon-search\"></el-button>\n          </el-input>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button type=\"primary\" @click=\"addDialogVisible=true\">添加用户</el-button>\n        </el-col>\n      </el-row>\n\n      <!-- 用户列表 -->\n      <el-table :data=\"userList\" style=\"width: 100%\" stripe border>\n        <el-table-column type=\"index\" label=\"#\"></el-table-column>\n        <el-table-column prop=\"username\" label=\"姓名\"></el-table-column>\n        <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\n        <el-table-column prop=\"mobile\" label=\"电话\"></el-table-column>\n        <el-table-column prop=\"role_name\" label=\"角色\"></el-table-column>\n        <el-table-column prop=\"mg_state\" label=\"状态\">\n          <template v-slot=\"slotProps\">\n            <el-switch\n              v-model=\"slotProps.row.mg_state\"\n              active-color=\"#13ce66\"\n              inactive-color=\"#ff4949\"\n              @change=\"userStatusChange(slotProps.row)\"\n            ></el-switch>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"180px\">\n          <template v-slot=\"scope\">\n            <!-- 修改 -->\n            <el-button\n              @click=\"showEditDialog(scope.row.id)\"\n              type=\"primary\"\n              icon=\"el-icon-edit\"\n              size=\"mini\"\n            ></el-button>\n            <!-- 删除 -->\n            <el-button\n              type=\"danger\"\n              @click=\"removeUserById(scope.row.id)\"\n              icon=\"el-icon-delete\"\n              size=\"mini\"\n            ></el-button>\n            <!-- 分配角色 -->\n            <el-tooltip :enterable=\"false\" effect=\"dark\" content=\"分配角色\" placement=\"top\">\n              <el-button\n                type=\"warning\"\n                icon=\"el-icon-setting\"\n                @click=\"setRole(scope.row)\"\n                size=\"mini\"\n              ></el-button>\n            </el-tooltip>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页 -->\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"queryInfo.pagenum\"\n        :page-sizes=\"[1, 2, 5, 8]\"\n        :page-size=\"queryInfo.pagesize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n      ></el-pagination>\n    </el-card>\n\n    <!-- 添加用户对话框 -->\n    <el-dialog @close=\"addDialogClosed\" title=\"添加用户\" :visible.sync=\"addDialogVisible\" width=\"50%\">\n      <!-- 内容 -->\n      <el-form ref=\"addFormRef\" :rules=\"addFormRules\" :model=\"addForm\" label-width=\"80px\">\n        <el-form-item label=\"用户名称\" prop=\"username\">\n          <el-input v-model=\"addForm.username\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"用户密码\" prop=\"password\">\n          <el-input v-model=\"addForm.password\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"用户邮箱\" prop=\"email\">\n          <el-input v-model=\"addForm.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"用户手机\" prop=\"mobile\">\n          <el-input v-model=\"addForm.mobile\"></el-input>\n        </el-form-item>\n      </el-form>\n      <!-- 底部 -->\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <!-- 修改用户对话框 -->\n    <el-dialog @close=\"editDialogClosed\" title=\"修改用户\" :visible.sync=\"editDialogVisible\" width=\"50%\">\n      <!-- 内容 -->\n      <el-form ref=\"editFormRef\" :rules=\"editFormRules\" :model=\"editForm\" label-width=\"80px\">\n        <el-form-item label=\"用户名称\" prop=\"username\">\n          <el-input disabled v-model=\"editForm.username\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"用户邮箱\" prop=\"email\">\n          <el-input v-model=\"editForm.email\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"用户手机\" prop=\"mobile\">\n          <el-input v-model=\"editForm.mobile\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editUser\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 分配角色对话框 -->\n    <el-dialog\n      title=\"分配角色\"\n      :visible.sync=\"setDialogVisible\"\n      @close=\"setDialogDialogClosed\"\n      width=\"50%\"\n    >\n      <!-- 内容 -->\n      <div>\n        <p>当前用户：{{userInfo.username}}</p>\n        <p>当前角色：{{userInfo.role_name}}</p>\n        <p>\n          <span>分配新角色</span>\n          <el-select v-model=\"seletedRoleId\" placeholder=\"请选择\">\n            <el-option\n              v-for=\"item in rolesList\"\n              :key=\"item.id\"\n              :label=\"item.roleName\"\n              :value=\"item.id\"\n            ></el-option>\n          </el-select>\n        </p>\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"setDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"saveRoleInfo\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    // 自定义验证\n    const checkEmail = (rule, value, callback) => {\n      //  验证邮箱的正则表达式\n      const regEmail = /^([a-zA-Z]|[0-9])(\\w|\\-)+@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/;\n      if (regEmail.test(value)) {\n        // 合法的邮箱\n        return callback();\n      }\n      callback(new Error(\"请输入合法的邮箱\"));\n    };\n    const checkMobile = (rule, value, callback) => {\n      let phone = value.replace(/\\s/g, \"\"); //去除空格\n      //校验手机号，号段主要有(不包括上网卡)：130~139、150~153，155~159，180~189、170~171、176~178。14号段为上网卡专属号段\n      let regs = /^((13[0-9])|(17[0-1,6-8])|(15[^4,\\\\D])|(18[0-9]))\\d{8}$/;\n      if (value.length == 0) {\n        callback();\n      } else {\n        if (!regs.test(phone)) {\n          callback([new Error(\"手机号输入不合法\")]);\n        } else {\n          callback();\n        }\n      }\n    };\n    return {\n      // 用户列表\n      queryInfo: {\n        query: \"\",\n        // 当前页数\n        pagenum: 1,\n        pagesize: 2\n      },\n      userList: [],\n      total: 0,\n      // 控制对话框显示\n      addDialogVisible: false,\n      // 添加用户对象\n      addForm: {\n        username: \"\",\n        password: \"\",\n        email: \"\",\n        mobile: \"\"\n      },\n      // 添加用户对象规则\n      addFormRules: {\n        username: [\n          { required: true, message: \"请输入用户名称\", trigger: \"blur\" },\n          { min: 3, max: 10, message: \"长度在 3 到 10 个字符\", trigger: \"blur\" }\n        ],\n        password: [\n          { required: true, message: \"请输入用户密码\", trigger: \"blur\" },\n          { min: 3, max: 20, message: \"长度在 3 到 20 个字符\", trigger: \"blur\" }\n        ],\n        email: [\n          { required: true, message: \"请输入用户邮箱\", trigger: \"blur\" },\n          { validator: checkEmail, trigger: \"blur\" }\n        ],\n        mobile: [\n          { required: true, message: \"请输入用户手机\", trigger: \"blur\" },\n          {\n            min: 8,\n            max: 17,\n            message: \"长度在 8 到 17 个字符\",\n            trigger: \"blur\"\n          },\n          { validator: checkMobile, trigger: \"blur\" }\n        ]\n      },\n      // 编辑用户对话框\n      editDialogVisible: false,\n      // 用户查询到信息\n      editForm: {},\n      editFormRules: {\n        username: [\n          { required: true, message: \"请输入用户名称\", trigger: \"blur\" },\n          { min: 3, max: 10, message: \"长度在 3 到 10 个字符\", trigger: \"blur\" }\n        ],\n        password: [\n          { required: true, message: \"请输入用户密码\", trigger: \"blur\" },\n          { min: 3, max: 20, message: \"长度在 3 到 20 个字符\", trigger: \"blur\" }\n        ],\n        email: [\n          { required: true, message: \"请输入用户邮箱\", trigger: \"blur\" },\n          { validator: checkEmail, trigger: \"blur\" }\n        ],\n        mobile: [\n          { required: true, message: \"请输入用户手机\", trigger: \"blur\" },\n          {\n            min: 8,\n            max: 17,\n            message: \"长度在 8 到 17 个字符\",\n            trigger: \"blur\"\n          },\n          { validator: checkMobile, trigger: \"blur\" }\n        ]\n      },\n      // 控制分配角色对话框\n      setDialogVisible: false,\n      //需要被分配的角色信息\n      userInfo: {},\n      //所有角色数据\n      rolesList: [],\n      // 已选择\n      seletedRoleId: \"\"\n    };\n  },\n  created() {\n    this.getUserList();\n  },\n  methods: {\n    async getUserList() {\n      const { data: res } = await this.$http.get(\"users\", {\n        params: this.queryInfo\n      });\n      if (res.meta.status !== 200) {\n        this.$message.error(\"获取失败\");\n      } else {\n        this.userList = res.data.users;\n        this.total = res.data.total;\n      }\n      // console.log(res);\n    },\n    // 监听page改变\n    handleSizeChange(newSize) {\n      // console.log(newSize);\n      this.queryInfo.pagesize = newSize;\n      this.getUserList();\n    },\n    // 监听页码值改变\n    handleCurrentChange(newSize) {\n      this.queryInfo.pagenum = newSize;\n      this.getUserList();\n    },\n    // 监听状态事件\n    async userStatusChange(userInfo) {\n      // console.log(userInfo);\n      const { data: res } = await this.$http.put(\n        `users/${userInfo.id}/state/${userInfo.mg_state}`\n      );\n      if (res.meta.status !== 200) {\n        userInfo.mg_state = !userInfo.mg_state;\n        return this.$message.error(\"更新用户状态失败\");\n      }\n      this.$message.success(\"更新成功\");\n      console.log(res);\n    },\n    // 关闭弹框\n    addDialogClosed() {\n      this.$refs.addFormRef.resetFields();\n    },\n    // 添加用户\n    addUser() {\n      this.$refs.addFormRef.validate(async valid => {\n        // console.log(valid);\n        if (!valid) return;\n        // 发起请求\n        const { data: res } = await this.$http.post(\"users\", this.addForm);\n        if (res.meta.status !== 201) {\n          this.$message.error(\"添加失败\");\n        }\n        this.$message.success(\"添加成功\");\n        this.addDialogVisible = false;\n        // 重新获取列表\n        this.getUserList();\n      });\n    },\n    // 修改用户对话框\n    async showEditDialog(id) {\n      const { data: res } = await this.$http.get(\"users/\" + id);\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"查询失败\");\n      }\n      this.editForm = res.data;\n      this.editDialogVisible = !this.editDialogVisible;\n    },\n    // 关闭事件\n    editDialogClosed() {\n      console.log(this.$refs);\n      this.$refs.editFormRef.resetFields();\n    },\n    // 编辑表单预验证\n    editUser() {\n      this.$refs.editFormRef.validate(async valid => {\n        // console.log(valid);\n        if (!valid) return;\n        const { data: res } = await this.$http.put(\n          \"users/\" + this.editForm.id,\n          {\n            email: this.editForm.email,\n            mobile: this.editForm.mobile\n          }\n        );\n        if (res.meta.status !== 200) {\n          return this.$message.error(\"提交失败\");\n        }\n        this.editDialogVisible = false;\n        this.getUserList;\n        this.$message.success(\"提交成功！\");\n      });\n    },\n    // 根据Id删除\n    async removeUserById(id) {\n      const confirmResult = await this.$confirm(\n        \"此操作将永久删除该用户, 是否继续?\",\n        \"提示\",\n        {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }\n      ).catch(err => {\n        return err;\n      });\n      // 确认返回confirm,取消返回cancel\n      // console.log(confirmResult);\n      if (confirmResult !== \"confirm\") {\n        return this.$message.info(\"已取消删除\");\n      }\n      const { data: res } = await this.$http.delete(\"users/\" + id);\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"删除用户失败\");\n      }\n      this.$message.success(\"删除成功\");\n      this.getUserList();\n    },\n    // 分配角色\n    async setRole(userInfo) {\n      this.userInfo = userInfo;\n      const { data: res } = await this.$http.get(\"roles\");\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"获取角色列表失败\");\n      }\n      this.rolesList = res.data;\n      this.setDialogVisible = true;\n    },\n    // 提交分配角色\n    async saveRoleInfo() {\n      if (!this.seletedRoleId) {\n        return this.$message.error(\"请选择分配的角色\");\n      }\n      const { data: res } = await this.$http.put(\n        `users/${this.userInfo.id}/role`,\n        {\n          rid: this.seletedRoleId\n        }\n      );\n      console.log(res);\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"更新失败！\");\n      }\n      this.$message.success(\"更新成功！\");\n      this.getUserList();\n      this.setDialogVisible = false;\n    },\n    // 角色对话框关闭\n    setDialogDialogClosed() {\n      this.seletedRoleId = \"\";\n      this.userInfo = {};\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.el-table {\n  margin-top: 20px;\n  font-size: 12px;\n}\n.el-pagination {\n  margin-top: 15px;\n}\n</style>"]}]}