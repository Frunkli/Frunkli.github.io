{"remainingRequest":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liyanliang/Desktop/便家/tob-bianjia-clint/src/components/login/Login.vue?vue&type=style&index=0&id=caf4263e&lang=less&scoped=true&","dependencies":[{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/src/components/login/Login.vue","mtime":1679735545016},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5sb2dpbl9jb250YWluZXIgewogIGJhY2tncm91bmQtY29sb3I6ICNjY2M7CiAgaGVpZ2h0OiAxMDAlOwp9Ci5sb2dpbl9ib3ggewogIHdpZHRoOiA0NTBweDsKICBoZWlnaHQ6IDMwMHB4OwogIGJhY2tncm91bmQtY29sb3I6ICNlZWU7CiAgYm9yZGVyOiAzMHB4OwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBsZWZ0OiA1MCU7CiAgdG9wOiA1MCU7CiAgbWFyZ2luOiAwOwogIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOwoKICAuYXZhdGFyX2JveCB7CiAgICBoZWlnaHQ6IDEzMHB4OwogICAgd2lkdGg6IDEzMHB4OwogICAgYm9yZGVyOiAxcHggc29saWQgI2VlZTsKICAgIGJvcmRlci1yYWRpdXM6IDUwJTsKICAgIHBhZGRpbmc6IDEwcHg7CiAgICBib3gtc2hhZG93OiAwIDAgMTBweCAjY2NjOwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgbGVmdDogNTAlOwogICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlOwogICAgaW1nIHsKICAgICAgd2lkdGg6IDEwMCU7CiAgICAgIGhlaWdodDogMTAwJTsKICAgICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkOwogICAgfQogIH0KfQoKLmJ0bnMgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0Owp9Ci5sb2dpbl9mb3JtIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgYm90dG9tOiAwOwogIHdpZHRoOiAxMDAlOwogIHBhZGRpbmc6IDAgMjBweDsKICBib3gtc2l6aW5nOiBib3JkZXItYm94Owp9Cg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components/login","sourcesContent":["<template>\n  <div class=\"login_container\">\n    <div class=\"login_box\">\n      <div class=\"avatar_box\">\n        <img src=\"../../assets/logo.png\" alt srcset />\n      </div>\n      <!-- 表单 -->\n      <el-form\n        ref=\"loginFormRef\"\n        :model=\"loginForm\"\n        :rules=\"loginFormRules\"\n        label-width=\"0px\"\n        class=\"login_form\"\n      >\n        <!-- 用户 -->\n        <el-form-item prop=\"username\">\n          <el-input v-model=\"loginForm.username\" prefix-icon=\"el-icon-s-cooperation\"></el-input>\n        </el-form-item>\n\n        <!-- 密码 -->\n        <el-form-item prop=\"password\">\n          <el-input type=\"password\" v-model=\"loginForm.password\" prefix-icon=\"el-icon-search\"></el-input>\n        </el-form-item>\n\n        <!-- 按钮 -->\n        <el-form-item class=\"btns\">\n          <el-button type=\"primary\" @click=\"login\">登录</el-button>\n          <el-button type=\"info\" @click=\"resetLoginForm\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      // 数据绑定\n      loginForm: {\n        username: \"admin\",\n        password: \"123456\"\n      },\n      // 验证规则\n      loginFormRules: {\n        username: [\n          { required: true, message: \"请输入用户名称\", trigger: \"blur\" },\n          { min: 3, max: 8, message: \"长度在 3 到 8个字符\", trigger: \"blur\" }\n        ],\n        password: [\n          { required: true, message: \"请输入密码\", trigger: \"blur\" },\n          { min: 3, max: 8, message: \"长度在 3 到 8个字符\", trigger: \"blur\" }\n        ]\n      }\n    };\n  },\n  methods: {\n    // 重置\n    resetLoginForm() {\n      this.$refs.loginFormRef.resetFields();\n    },\n    login() {\n      this.$refs.loginFormRef.validate(async valid => {\n        if (!valid) return;\n        // 如果返回promise 利用async简化。返回data对象\n        // {data: res} 结构出真实服务器返回数据\n        const { data: res } = await this.$http.post(\"login\", this.loginForm);\n        if (res.meta.status !== 200) return this.$message.error(\"登录失败\");\n        this.$message.success(\"登录成功！\");\n        // 登录后的token 保存到sessionStorage\n        window.sessionStorage.setItem(\"token\", res.data.token);\n        this.$router.push(\"/home\");\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.login_container {\n  background-color: #ccc;\n  height: 100%;\n}\n.login_box {\n  width: 450px;\n  height: 300px;\n  background-color: #eee;\n  border: 30px;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  margin: 0;\n  transform: translate(-50%, -50%);\n\n  .avatar_box {\n    height: 130px;\n    width: 130px;\n    border: 1px solid #eee;\n    border-radius: 50%;\n    padding: 10px;\n    box-shadow: 0 0 10px #ccc;\n    position: absolute;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: #eee;\n    img {\n      width: 100%;\n      height: 100%;\n      border-radius: 50%;\n      background-color: #ddd;\n    }\n  }\n}\n\n.btns {\n  display: flex;\n  justify-content: flex-start;\n}\n.login_form {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 0 20px;\n  box-sizing: border-box;\n}\n</style>"]}]}