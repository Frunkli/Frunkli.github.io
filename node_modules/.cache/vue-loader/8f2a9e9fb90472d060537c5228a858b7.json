{"remainingRequest":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liyanliang/Desktop/便家/tob-bianjia-clint/src/components/report/Report.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/src/components/report/Report.vue","mtime":1679735545018},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBlY2hhcnRzIGZyb20gImVjaGFydHMiOwppbXBvcnQgXyBmcm9tICJsb2Rhc2giOwoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBvcHRpb246IHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogIueUqOaIt+adpea6kCIKICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICJheGlzIiwKICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgIHR5cGU6ICJjcm9zcyIsCiAgICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAiI0U5RUVGMyIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZ3JpZDogewogICAgICAgICAgbGVmdDogIjMlIiwKICAgICAgICAgIHJpZ2h0OiAiNCUiLAogICAgICAgICAgYm90dG9tOiAiMyUiLAogICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB4QXhpczogWwogICAgICAgICAgewogICAgICAgICAgICBib3VuZGFyeUdhcDogZmFsc2UKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgIHlBeGlzOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIHR5cGU6ICJ2YWx1ZSIKICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0KICAgIH07CiAgfSwKICBhc3luYyBtb3VudGVkKCkgewogICAgLy8g5Z+65LqO5YeG5aSH5aW955qEZG9t77yM5Yid5aeL5YyWZWNoYXJ0c+WunuS+iwogICAgY29uc3QgbXlDaGFydCA9IGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibWFpbiIpKTsKCiAgICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IHRoaXMuJGh0dHAuZ2V0KCJyZXBvcnRzL3R5cGUvMSIpOwogICAgaWYgKGRhdGEubWV0YS5zdGF0dXMgIT09IDIwMCkgewogICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZS5lcnJvcihkYXRhLm1ldGEubXNnKTsKICAgIH0KICAgIC8vIOaMh+WumuWbvuihqOeahOmFjee9rumhueWSjOaVsOaNrgogICAgLy8g5L2/55So5Yia5oyH5a6a55qE6YWN572u6aG55ZKM5pWw5o2u5pi+56S65Zu+6KGo44CCCiAgICBjb25zdCByZXN1bHQgPSBfLm1lcmdlKGRhdGEuZGF0YSwgdGhpcy5vcHRpb24pOwogICAgbXlDaGFydC5zZXRPcHRpb24ocmVzdWx0KTsKICB9Cn07Cg=="},{"version":3,"sources":["Report.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Report.vue","sourceRoot":"src/components/report","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑 -->\n    <el-breadcrumb separator=\"/\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>\n        <a href=\"/home\">数据统计</a>\n      </el-breadcrumb-item>\n      <el-breadcrumb-item>数据报表</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片布局 -->\n    <el-card>\n      <!-- 为ECharts准备一个具备大小（宽高）的Dom -->\n      <div id=\"main\" style=\"width: 600px;height:400px;\"></div>\n    </el-card>\n  </div>\n</template>\n<script>\nimport echarts from \"echarts\";\nimport _ from \"lodash\";\n\nexport default {\n  data() {\n    return {\n      option: {\n        title: {\n          text: \"用户来源\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            label: {\n              backgroundColor: \"#E9EEF3\"\n            }\n          }\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          containLabel: true\n        },\n        xAxis: [\n          {\n            boundaryGap: false\n          }\n        ],\n        yAxis: [\n          {\n            type: \"value\"\n          }\n        ]\n      }\n    };\n  },\n  async mounted() {\n    // 基于准备好的dom，初始化echarts实例\n    const myChart = echarts.init(document.getElementById(\"main\"));\n\n    const { data } = await this.$http.get(\"reports/type/1\");\n    if (data.meta.status !== 200) {\n      return this.$message.error(data.meta.msg);\n    }\n    // 指定图表的配置项和数据\n    // 使用刚指定的配置项和数据显示图表。\n    const result = _.merge(data.data, this.option);\n    myChart.setOption(result);\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n</style>"]}]}