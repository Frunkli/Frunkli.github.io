{"remainingRequest":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liyanliang/Desktop/便家/tob-bianjia-clint/src/components/goods/Cate.vue?vue&type=style&index=0&id=1925afea&lang=less&scoped=true&","dependencies":[{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/src/components/goods/Cate.vue","mtime":1679735545016},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liyanliang/Desktop/便家/tob-bianjia-clint/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudHJlZVRhYmxlIHsKICBtYXJnaW4tdG9wOiAxNXB4Owp9Ci5wYWdpbiB7CiAgbWFyZ2luLXRvcDogMTVweDsKfQouZWwtY2FzY2FkZXIgewogIHdpZHRoOiAxMDAlOwp9Cg=="},{"version":3,"sources":["Cate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Cate.vue","sourceRoot":"src/components/goods","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑 -->\n    <el-breadcrumb separator=\"/\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>\n        <a href=\"/home\">商品管理</a>\n      </el-breadcrumb-item>\n      <el-breadcrumb-item>商品列表</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片布局 -->\n    <el-card>\n      <!-- 添加商品按钮 -->\n      <el-row>\n        <el-col>\n          <el-button @click=\"showAddCateDialog\" type=\"primary\">添加商品</el-button>\n        </el-col>\n      </el-row>\n      <!-- 商品分类数据表 -->\n\n      <tree-table\n        :selection-type=\"false\"\n        :expand-type=\"false\"\n        show-index\n        border\n        :data=\"cateList\"\n        :columns=\"columns\"\n        class=\"treeTable\"\n      >\n        <!-- 是否有效 -->\n        <template v-slot:isok=\"scope\">\n          <i class=\"el-icon-error\" v-if=\"scope.row.cat_deleted === true\"></i>\n          <i class=\"el-icon-success\" style=\"color:green\" v-else></i>\n        </template>\n\n        <!-- 排序 -->\n        <template v-slot:order=\"scope\">\n          <el-tag v-if=\"scope.row.cat_level ===0\" size=\"mini\">一级</el-tag>\n          <el-tag v-else-if=\"scope.row.cat_level ===1\" size=\"mini\" type=\"success\">二级</el-tag>\n\n          <el-tag v-else size=\"mini\" type=\"danger\">三级</el-tag>\n        </template>\n\n        <!-- 操作 -->\n        <template v-slot:opt=\"scope\">\n          <el-button\n            type=\"primary\"\n            icon=\"el-icon-edit\"\n            size=\"mini\"\n            @click=\"showEditDialog(scope.row.cat_id)\"\n          >编辑</el-button>\n          <el-button\n            type=\"danger\"\n            icon=\"el-icon-delete\"\n            size=\"mini\"\n            @click=\"removeCateById(scope.row.cat_id)\"\n          >删除</el-button>\n        </template>\n      </tree-table>\n\n      <!-- 分页 -->\n      <!-- 分页 -->\n      <el-pagination\n        class=\"pagin\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"queryInfo.pagenum\"\n        :page-sizes=\"[1, 2, 5, 8]\"\n        :page-size=\"queryInfo.pagesize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n      ></el-pagination>\n    </el-card>\n\n    <!-- 添加分类对话框 -->\n\n    <el-dialog\n      title=\"添加分类\"\n      :visible.sync=\"addDialogVisible\"\n      @close=\"addCateDialogClose\"\n      width=\"50%\"\n    >\n      <!-- 内容 -->\n      <el-form\n        ref=\"addCateFormRef\"\n        :rules=\"addCateFormRules\"\n        :model=\"addCateForm\"\n        label-width=\"80px\"\n      >\n        <el-form-item label=\"分类名称\" prop=\"cat_name\">\n          <el-input v-model=\"addCateForm.cat_name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"父级分类\">\n          <!-- <el-input v-model=\"addCateForm.cat_name\"></el-input> -->\n          <el-cascader\n            :props=\"cascaderProps\"\n            v-model=\"selectdKeys\"\n            :options=\"parentCateList\"\n            @change=\"parentCateChange\"\n            clearable\n          ></el-cascader>\n        </el-form-item>\n      </el-form>\n      <!-- 底部 -->\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n        <el-button @click=\"addCate\" type=\"primary\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 修改分类对话框 -->\n    <el-dialog @close=\"editDialogClosed\" title=\"修改用户\" :visible.sync=\"editDialogVisible\" width=\"50%\">\n      <!-- 内容 -->\n      <el-form ref=\"editFormRef\" :rules=\"editFormRules\" :model=\"editForm\" label-width=\"80px\">\n        <el-form-item label=\"分类名称\" prop=\"cat_name\">\n          <el-input v-model=\"editForm.cat_name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"是否有效\" prop=\"cat_deleted\">\n          <div @click=\"ised\">\n            <i class=\"el-icon-error\" v-if=\"this.editForm.cat_deleted === true\"></i>\n            <i class=\"el-icon-success\" style=\"color:green\" v-else></i>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"排序\" prop=\"cat_level\">\n          <div>\n            <el-tag v-if=\"this.editForm.cat_level ===0\" size=\"mini\">一级</el-tag>\n            <el-tag v-else-if=\"this.editForm.cat_level ===1\" size=\"mini\" type=\"success\">二级</el-tag>\n\n            <el-tag v-else size=\"mini\" type=\"danger\">三级</el-tag>\n          </div>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editUser\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      //查询信息\n      queryInfo: {\n        type: 3,\n        pagenum: 1,\n        pagesize: 5\n      },\n      // 商品分类数据列表\n      cateList: [],\n      // 总数据条数\n      total: 0,\n      //为table指定定义\n      columns: [\n        {\n          label: \"分类名称\",\n          prop: \"cat_name\"\n        },\n        {\n          label: \"是否有效\",\n          type: \"template\",\n          template: \"isok\"\n        },\n        {\n          label: \"排序\",\n          type: \"template\",\n          template: \"order\"\n        },\n        {\n          label: \"操作\",\n          type: \"template\",\n          template: \"opt\"\n        }\n      ],\n      addDialogVisible: false,\n      addCateForm: {\n        cat_name: \"\",\n        //父级id\n        cat_pid: 0,\n        cat_level: 0\n      },\n      addCateFormRules: {\n        cat_name: [\n          { required: true, message: \"请输入分类名称\", trigger: \"blur\" }\n        ]\n      },\n      // 父级分类列表\n      parentCateList: [],\n      // 指定联选择器配置对象\n      cascaderProps: {\n        expandTrigger: \"hover\",\n        value: \"cat_id\",\n        label: \"cat_name\",\n        children: \"children\",\n        checkStrictly: true\n      },\n      // 选中父级分类id的数组\n      selectdKeys: [],\n      // 编辑用户对话框\n      editDialogVisible: false,\n      // 用户查询到信息\n      editForm: {},\n      editFormRules: {\n        cat_name: [\n          { required: true, message: \"请输入分类名称\", trigger: \"blur\" }\n        ]\n      },\n      // 是否有效按钮\n      isok: true\n    };\n  },\n  created() {\n    this.getCateList();\n  },\n  methods: {\n    // 获取商品分类数据\n    async getCateList() {\n      const { data: res } = await this.$http.get(\"categories\", {\n        params: this.queryInfo\n      });\n      // console.log(res);\n      if (res.meta.status !== 200) {\n        this.$message.error(\"获取角色列表失败\");\n      }\n      this.cateList = res.data.result;\n      this.total = res.data.total;\n      // console.log(res);\n    },\n    //pagesize\n    handleSizeChange(newSize) {\n      this.queryInfo.pagesize = newSize;\n      this.getCateList();\n    },\n    handleCurrentChange(newpagenum) {\n      this.queryInfo.pagenum = newpagenum;\n      this.getCateList();\n    },\n    //添加\n    showAddCateDialog() {\n      this.getParentCateList();\n      this.addDialogVisible = true;\n    },\n    // 获取父级分类列表\n    async getParentCateList() {\n      const { data: res } = await this.$http.get(\"categories\", {\n        params: { type: 2 }\n      });\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"获取失败\");\n      }\n      this.parentCateList = res.data;\n      // console.log(this.parentCateList);\n    },\n    // 选中父级变化\n    parentCateChange() {\n      // console.log(this.selectdKeys);\n      if (this.selectdKeys.length > 0) {\n        //父级分类id\n        this.addCateForm.cat_pid = this.selectdKeys[\n          this.selectdKeys.length - 1\n        ];\n        // 当前分类赋值\n        this.addCateForm.cat_level = this.selectdKeys.length;\n        return;\n      } else {\n        this.addCateForm.cat_pid = 0;\n        // 当前分类赋值\n        this.addCateForm.cat_level = 0;\n      }\n    },\n    // 点击添加分类\n    addCate() {\n      // console.log(this.addCateForm);\n      this.$refs.addCateFormRef.validate(async valid => {\n        if (!valid) return;\n        const { data: res } = await this.$http.post(\n          \"categories\",\n          this.addCateForm\n        );\n        if (res.meta.status !== 201) {\n          return this.$message.error(\"添加失败\");\n        }\n        this.$message.success(\"添加成功！\");\n        this.getCateList();\n        this.addDialogVisible = false;\n      });\n    },\n    // 关闭重置表单\n    addCateDialogClose() {\n      this.$refs.addCateFormRef.resetFields();\n      this.selectdKeys = [];\n      this.addCateForm.cat_pid = 0;\n      this.addCateForm.cat_level = 0;\n    },\n    // 修改分类对话框\n    async showEditDialog(id) {\n      const { data: res } = await this.$http.get(\"categories/\" + id);\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"查询失败\");\n      }\n      this.editForm = res.data;\n      console.log(this.editForm);\n      this.isok = this.cat_deleted;\n      this.editDialogVisible = !this.editDialogVisible;\n    },\n    //添加时是否有效\n    ised() {\n      this.editForm.cat_deleted = !this.editForm.cat_deleted;\n      // console.log(this.editForm.cat_deleted);\n    },\n    // 关闭事件\n    editDialogClosed() {\n      // console.log(this.$refs);\n      this.$refs.editFormRef.resetFields();\n    },\n    // 编辑表单预验证\n    editUser() {\n      this.$refs.editFormRef.validate(async valid => {\n        // console.log(valid);\n        if (!valid) return;\n        console.log(this.editForm);\n        const { data: res } = await this.$http.put(\n          \"categories/\" + this.editForm.cat_id,\n          {\n            cat_name: this.editForm.cat_name\n          }\n        );\n        if (res.meta.status !== 200) {\n          return this.$message.error(\"提交失败\");\n        }\n        this.editDialogVisible = false;\n        this.getCateList();\n        this.$message.success(\"提交成功！\");\n      });\n    },\n    // 根据Id删除\n    async removeCateById(id) {\n      const confirmResult = await this.$confirm(\n        \"此操作将永久删除该分类, 是否继续?\",\n        \"提示\",\n        {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }\n      ).catch(err => {\n        return err;\n      });\n      console.log(id);\n      // 确认返回confirm,取消返回cancel\n      // console.log(confirmResult);\n      if (confirmResult !== \"confirm\") {\n        return this.$message.info(\"已取消删除\");\n      }\n      const { data: res } = await this.$http.delete(\"categories/\" + id);\n      if (res.meta.status !== 200) {\n        return this.$message.error(\"删除用户失败\");\n      }\n      this.$message.success(\"删除成功\");\n      this.getCateList();\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.treeTable {\n  margin-top: 15px;\n}\n.pagin {\n  margin-top: 15px;\n}\n.el-cascader {\n  width: 100%;\n}\n</style>\n"]}]}